#!/usr/bin/env bash
# Create a script to install and configure HAProxy on lb-01 server
# Configure HAProxy to send traffic to web-01 and web-02 servers
# Distribute requests using a roundrobin algorithm
# Make sure that HAProxy can be managed via an init script

# Check for root privileges
if [ "$(id -u)" -ne 0 ]; then
    echo "This script must be run as root" >&2
    exit 1
fi

# Update package repository
apt-get update

# Install HAProxy
apt-get -y install haproxy

# Configure HAProxy
cat <<EOT | sudo tee /etc/haproxy/haproxy.cfg
global
    log /dev/log    local0
    log /dev/log    local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

defaults
    log     global
    mode    http
    option  httplog
    option  dontlognull
    timeout connect 5000
    timeout client  50000
    timeout server  50000
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

frontend Romanyerom_frontend
    bind *:80
    mode http
    default_backend Romanyerom_backend

backend Romanyerom_backend
    balance roundrobin
    server 316936-web-01 54.173.114.195:80 check
    server 316936-web-02 52.3.248.87:80 check
EOT

# Enable HAProxy to be started by init script
echo "ENABLED=1" | sudo tee -a /etc/default/haproxy

# Testing the HAProxy configuration file
if ! haproxy -c -f /etc/haproxy/haproxy.cfg; then
    echo "Failed to validate HAProxy configuration. Aborting." >&2
    exit 1
fi

# Restart HAProxy service
systemctl restart haproxy
